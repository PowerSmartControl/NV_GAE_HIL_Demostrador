-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity abc_2_dqo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_V : IN STD_LOGIC_VECTOR (24 downto 0);
    b_V : IN STD_LOGIC_VECTOR (24 downto 0);
    c_V : IN STD_LOGIC_VECTOR (24 downto 0);
    theta_V : IN STD_LOGIC_VECTOR (15 downto 0);
    Is_d_V : OUT STD_LOGIC_VECTOR (24 downto 0);
    Is_d_V_ap_vld : OUT STD_LOGIC;
    Is_q_V : OUT STD_LOGIC_VECTOR (24 downto 0);
    Is_q_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of abc_2_dqo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv17_1FBD0 : STD_LOGIC_VECTOR (16 downto 0) := "11111101111010000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_FBD0 : STD_LOGIC_VECTOR (15 downto 0) := "1111101111010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv17_430 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000110000";
    constant ap_const_lv16_430 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000110000";
    constant ap_const_lv52_555 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000010101010101";
    constant ap_const_lv52_FFFFFFFFFFAAB : STD_LOGIC_VECTOR (51 downto 0) := "1111111111111111111111111111111111111111101010101011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv25_FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "0111111111111111111111111";
    constant ap_const_lv25_1000000 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_calc_sin_cos_fu_106_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_143 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_calc_sin_cos_fu_106_ap_done : STD_LOGIC;
    signal grp_calc_sin_cos_fu_115_ap_done : STD_LOGIC;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_calc_sin_cos_fu_125_ap_done : STD_LOGIC;
    signal grp_calc_sin_cos_fu_134_ap_done : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal grp_calc_sin_cos_fu_115_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_147 : STD_LOGIC_VECTOR (15 downto 0);
    signal this_assign_1_fu_235_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal this_assign_1_reg_976 : STD_LOGIC_VECTOR (15 downto 0);
    signal isneg_11_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal this_assign_15_1_fu_269_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal this_assign_15_1_reg_988 : STD_LOGIC_VECTOR (15 downto 0);
    signal this_assign_14_1_fu_339_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal this_assign_14_1_reg_993 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal this_assign_16_1_fu_359_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal this_assign_16_1_reg_998 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_124_fu_925_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_124_reg_1003 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_calc_sin_cos_fu_125_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_reg_1008 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_fu_931_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_4_reg_1013 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_calc_sin_cos_fu_134_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_reg_1018 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_945_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_reg_1023 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_961_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_17_reg_1028 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_410_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_126_reg_1043 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal signbit_reg_1052 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_200_fu_433_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_200_reg_1058 : STD_LOGIC_VECTOR (22 downto 0);
    signal Range2_all_ones_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_reg_1063 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_1068 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_1075 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_419_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_131_reg_1080 : STD_LOGIC_VECTOR (51 downto 0);
    signal signbit_13_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_207_fu_483_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_207_reg_1095 : STD_LOGIC_VECTOR (22 downto 0);
    signal Range2_all_ones_9_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_9_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_30_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_30_reg_1105 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_reg_1112 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_128_fu_576_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_128_reg_1117 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal newsignbit_27_fu_582_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_27_reg_1123 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_reg_1128 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_133_fu_684_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_133_reg_1140 : STD_LOGIC_VECTOR (24 downto 0);
    signal newsignbit_28_fu_690_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_28_reg_1146 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_reg_1151 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_3_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_3_reg_1157 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_calc_sin_cos_fu_106_ap_start : STD_LOGIC;
    signal grp_calc_sin_cos_fu_106_ap_idle : STD_LOGIC;
    signal grp_calc_sin_cos_fu_106_ap_ready : STD_LOGIC;
    signal grp_calc_sin_cos_fu_106_theta_aux_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calc_sin_cos_fu_106_flag : STD_LOGIC;
    signal grp_calc_sin_cos_fu_115_ap_start : STD_LOGIC;
    signal grp_calc_sin_cos_fu_115_ap_idle : STD_LOGIC;
    signal grp_calc_sin_cos_fu_115_ap_ready : STD_LOGIC;
    signal grp_calc_sin_cos_fu_115_theta_aux_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calc_sin_cos_fu_115_flag : STD_LOGIC;
    signal grp_calc_sin_cos_fu_125_ap_start : STD_LOGIC;
    signal grp_calc_sin_cos_fu_125_ap_idle : STD_LOGIC;
    signal grp_calc_sin_cos_fu_125_ap_ready : STD_LOGIC;
    signal grp_calc_sin_cos_fu_125_flag : STD_LOGIC;
    signal grp_calc_sin_cos_fu_134_ap_start : STD_LOGIC;
    signal grp_calc_sin_cos_fu_134_ap_idle : STD_LOGIC;
    signal grp_calc_sin_cos_fu_134_ap_ready : STD_LOGIC;
    signal grp_calc_sin_cos_fu_134_flag : STD_LOGIC;
    signal ap_reg_grp_calc_sin_cos_fu_106_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_calc_sin_cos_fu_115_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_calc_sin_cos_fu_125_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_calc_sin_cos_fu_134_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_s_fu_151_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_122_fu_155_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_123_fu_169_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal isneg_fu_161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_fu_175_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_27_mux_fu_219_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_48_fu_227_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_fu_243_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal overflow_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i28_not_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_277_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_26_fu_282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i24_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_26_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge8_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_31_mux_fu_323_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_fu_331_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal overflow_19_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i29_not_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_410_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_419_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_99_fu_437_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_100_fu_453_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_102_fu_487_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_103_fu_503_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_202_fu_553_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qbit_fu_534_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_s_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_127_fu_525_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_134_fu_572_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_201_fu_546_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_204_fu_602_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_209_fu_661_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_14_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i1_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qbit_15_fu_642_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_6_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_132_fu_633_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_141_fu_680_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_208_fu_654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_211_fu_710_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_143_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i2_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_23_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_741_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_27_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_20_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i25_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_25_not_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_35_mux_fu_805_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_6_fu_812_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal deleted_zeros_11_fu_833_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i5_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i5_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_144_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i2_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_demorgan_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_28_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_21_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i26_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_26_not_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_707_mux_fu_897_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_7_fu_904_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_124_fu_925_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal OP2_V_3_fu_371_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_4_fu_931_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_937_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal OP2_V_fu_383_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_945_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal OP2_V_4_fu_394_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_937_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_953_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_961_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_953_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component calc_sin_cos IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        theta_aux_V : IN STD_LOGIC_VECTOR (15 downto 0);
        flag : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component pmsm_mul_12ns_42seOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (41 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component pmsm_mul_12s_42s_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (41 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component pmsm_mul_mul_25s_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component pmsm_mac_muladd_2hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (40 downto 0);
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component pmsm_mac_muladd_2ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (41 downto 0);
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    grp_calc_sin_cos_fu_106 : component calc_sin_cos
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_calc_sin_cos_fu_106_ap_start,
        ap_done => grp_calc_sin_cos_fu_106_ap_done,
        ap_idle => grp_calc_sin_cos_fu_106_ap_idle,
        ap_ready => grp_calc_sin_cos_fu_106_ap_ready,
        theta_aux_V => grp_calc_sin_cos_fu_106_theta_aux_V,
        flag => grp_calc_sin_cos_fu_106_flag,
        ap_return => grp_calc_sin_cos_fu_106_ap_return);

    grp_calc_sin_cos_fu_115 : component calc_sin_cos
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_calc_sin_cos_fu_115_ap_start,
        ap_done => grp_calc_sin_cos_fu_115_ap_done,
        ap_idle => grp_calc_sin_cos_fu_115_ap_idle,
        ap_ready => grp_calc_sin_cos_fu_115_ap_ready,
        theta_aux_V => grp_calc_sin_cos_fu_115_theta_aux_V,
        flag => grp_calc_sin_cos_fu_115_flag,
        ap_return => grp_calc_sin_cos_fu_115_ap_return);

    grp_calc_sin_cos_fu_125 : component calc_sin_cos
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_calc_sin_cos_fu_125_ap_start,
        ap_done => grp_calc_sin_cos_fu_125_ap_done,
        ap_idle => grp_calc_sin_cos_fu_125_ap_idle,
        ap_ready => grp_calc_sin_cos_fu_125_ap_ready,
        theta_aux_V => theta_V,
        flag => grp_calc_sin_cos_fu_125_flag,
        ap_return => grp_calc_sin_cos_fu_125_ap_return);

    grp_calc_sin_cos_fu_134 : component calc_sin_cos
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_calc_sin_cos_fu_134_ap_start,
        ap_done => grp_calc_sin_cos_fu_134_ap_done,
        ap_idle => grp_calc_sin_cos_fu_134_ap_idle,
        ap_ready => grp_calc_sin_cos_fu_134_ap_ready,
        theta_aux_V => this_assign_16_1_reg_998,
        flag => grp_calc_sin_cos_fu_134_flag,
        ap_return => grp_calc_sin_cos_fu_134_ap_return);

    pmsm_mul_12ns_42seOg_U10 : component pmsm_mul_12ns_42seOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 42,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_410_p0,
        din1 => r_V_reg_1023,
        ce => ap_const_logic_1,
        dout => grp_fu_410_p2);

    pmsm_mul_12s_42s_fYi_U11 : component pmsm_mul_12s_42s_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 42,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_419_p0,
        din1 => r_V_17_reg_1028,
        ce => ap_const_logic_1,
        dout => grp_fu_419_p2);

    pmsm_mul_mul_25s_g8j_U12 : component pmsm_mul_mul_25s_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 16,
        dout_WIDTH => 41)
    port map (
        din0 => p_Val2_124_fu_925_p0,
        din1 => reg_143,
        dout => p_Val2_124_fu_925_p2);

    pmsm_mul_mul_25s_g8j_U13 : component pmsm_mul_mul_25s_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 16,
        dout_WIDTH => 41)
    port map (
        din0 => p_Val2_4_fu_931_p0,
        din1 => reg_147,
        dout => p_Val2_4_fu_931_p2);

    pmsm_mac_muladd_2hbi_U14 : component pmsm_mac_muladd_2hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 16,
        din2_WIDTH => 41,
        dout_WIDTH => 42)
    port map (
        din0 => grp_fu_937_p0,
        din1 => reg_143,
        din2 => p_Val2_124_reg_1003,
        dout => grp_fu_937_p3);

    pmsm_mac_muladd_2ibs_U15 : component pmsm_mac_muladd_2ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 16,
        din2_WIDTH => 42,
        dout_WIDTH => 42)
    port map (
        din0 => grp_fu_945_p0,
        din1 => reg_147,
        din2 => grp_fu_937_p3,
        dout => grp_fu_945_p3);

    pmsm_mac_muladd_2hbi_U16 : component pmsm_mac_muladd_2hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 16,
        din2_WIDTH => 41,
        dout_WIDTH => 42)
    port map (
        din0 => grp_fu_953_p0,
        din1 => p_4_reg_1008,
        din2 => p_Val2_4_reg_1013,
        dout => grp_fu_953_p3);

    pmsm_mac_muladd_2ibs_U17 : component pmsm_mac_muladd_2ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 16,
        din2_WIDTH => 42,
        dout_WIDTH => 42)
    port map (
        din0 => grp_fu_961_p0,
        din1 => p_0_reg_1018,
        din2 => grp_fu_953_p3,
        dout => grp_fu_961_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_calc_sin_cos_fu_106_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_calc_sin_cos_fu_106_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    ap_reg_grp_calc_sin_cos_fu_106_ap_start <= ap_const_logic_1;
                elsif ((grp_calc_sin_cos_fu_106_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_calc_sin_cos_fu_106_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_calc_sin_cos_fu_115_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_calc_sin_cos_fu_115_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    ap_reg_grp_calc_sin_cos_fu_115_ap_start <= ap_const_logic_1;
                elsif ((grp_calc_sin_cos_fu_115_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_calc_sin_cos_fu_115_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_calc_sin_cos_fu_125_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_calc_sin_cos_fu_125_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_reg_grp_calc_sin_cos_fu_125_ap_start <= ap_const_logic_1;
                elsif ((grp_calc_sin_cos_fu_125_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_calc_sin_cos_fu_125_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_calc_sin_cos_fu_134_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_calc_sin_cos_fu_134_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_reg_grp_calc_sin_cos_fu_134_ap_start <= ap_const_logic_1;
                elsif ((grp_calc_sin_cos_fu_134_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_calc_sin_cos_fu_134_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                Range1_all_ones_30_reg_1105 <= Range1_all_ones_30_fu_513_p2;
                Range1_all_ones_reg_1068 <= Range1_all_ones_fu_463_p2;
                Range1_all_zeros_4_reg_1112 <= Range1_all_zeros_4_fu_519_p2;
                Range1_all_zeros_reg_1075 <= Range1_all_zeros_fu_469_p2;
                Range2_all_ones_9_reg_1100 <= Range2_all_ones_9_fu_497_p2;
                Range2_all_ones_reg_1063 <= Range2_all_ones_fu_447_p2;
                p_Val2_126_reg_1043 <= grp_fu_410_p2;
                p_Val2_131_reg_1080 <= grp_fu_419_p2;
                signbit_13_reg_1089 <= grp_fu_419_p2(51 downto 51);
                signbit_reg_1052 <= grp_fu_410_p2(51 downto 51);
                tmp_200_reg_1058 <= tmp_200_fu_433_p1;
                tmp_207_reg_1095 <= tmp_207_fu_483_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                brmerge40_demorgan_i_3_reg_1157 <= brmerge40_demorgan_i_3_fu_735_p2;
                brmerge40_demorgan_i_reg_1134 <= brmerge40_demorgan_i_fu_627_p2;
                carry_11_reg_1151 <= carry_11_fu_704_p2;
                carry_reg_1128 <= carry_fu_596_p2;
                newsignbit_27_reg_1123 <= p_Val2_128_fu_576_p2(24 downto 24);
                newsignbit_28_reg_1146 <= p_Val2_133_fu_684_p2(24 downto 24);
                p_Val2_128_reg_1117 <= p_Val2_128_fu_576_p2;
                p_Val2_133_reg_1140 <= p_Val2_133_fu_684_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                isneg_11_reg_981 <= p_Val2_1_fu_243_p2(16 downto 16);
                this_assign_15_1_reg_988 <= this_assign_15_1_fu_269_p3;
                this_assign_1_reg_976 <= this_assign_1_fu_235_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_0_reg_1018 <= grp_calc_sin_cos_fu_134_ap_return;
                p_4_reg_1008 <= grp_calc_sin_cos_fu_125_ap_return;
                p_Val2_124_reg_1003 <= p_Val2_124_fu_925_p2;
                p_Val2_4_reg_1013 <= p_Val2_4_fu_931_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                r_V_17_reg_1028 <= grp_fu_961_p3;
                r_V_reg_1023 <= grp_fu_945_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then
                reg_143 <= grp_calc_sin_cos_fu_106_ap_return;
                reg_147 <= grp_calc_sin_cos_fu_115_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                this_assign_14_1_reg_993 <= this_assign_14_1_fu_339_p3;
                this_assign_16_1_reg_998 <= this_assign_16_1_fu_359_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_block_state3_on_subcall_done, ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    Is_d_V <= 
        p_Val2_35_mux_fu_805_p3 when (underflow_25_not_fu_799_p2(0) = '1') else 
        p_Val2_6_fu_812_p3;

    Is_d_V_ap_vld_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Is_d_V_ap_vld <= ap_const_logic_1;
        else 
            Is_d_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Is_q_V <= 
        p_Val2_707_mux_fu_897_p3 when (underflow_26_not_fu_891_p2(0) = '1') else 
        p_Val2_7_fu_904_p3;

    Is_q_V_ap_vld_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Is_q_V_ap_vld <= ap_const_logic_1;
        else 
            Is_q_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        OP2_V_3_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_V),41));

        OP2_V_4_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_V),41));

        OP2_V_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_V),41));

    Range1_all_ones_30_fu_513_p2 <= "1" when (tmp_103_fu_503_p4 = ap_const_lv3_7) else "0";
    Range1_all_ones_fu_463_p2 <= "1" when (tmp_100_fu_453_p4 = ap_const_lv3_7) else "0";
    Range1_all_zeros_4_fu_519_p2 <= "1" when (tmp_103_fu_503_p4 = ap_const_lv3_0) else "0";
    Range1_all_zeros_fu_469_p2 <= "1" when (tmp_100_fu_453_p4 = ap_const_lv3_0) else "0";
    Range2_all_ones_9_fu_497_p2 <= "1" when (tmp_102_fu_487_p4 = ap_const_lv2_3) else "0";
    Range2_all_ones_fu_447_p2 <= "1" when (tmp_99_fu_437_p4 = ap_const_lv2_3) else "0";
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state3_on_subcall_done_assign_proc : process(grp_calc_sin_cos_fu_106_ap_done, grp_calc_sin_cos_fu_115_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_calc_sin_cos_fu_115_ap_done = ap_const_logic_0) or (grp_calc_sin_cos_fu_106_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_calc_sin_cos_fu_106_ap_done, grp_calc_sin_cos_fu_115_ap_done, grp_calc_sin_cos_fu_125_ap_done, grp_calc_sin_cos_fu_134_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_calc_sin_cos_fu_134_ap_done = ap_const_logic_0) or (grp_calc_sin_cos_fu_125_ap_done = ap_const_logic_0) or (grp_calc_sin_cos_fu_115_ap_done = ap_const_logic_0) or (grp_calc_sin_cos_fu_106_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_263_p2 <= (overflow_fu_189_p2 or brmerge_i_i28_not_fu_257_p2);
    brmerge2_fu_353_p2 <= (overflow_19_fu_295_p2 or brmerge_i_i29_not_fu_347_p2);
    brmerge40_demorgan_i_3_fu_735_p2 <= (newsignbit_28_fu_690_p3 and deleted_ones_23_fu_728_p3);
    brmerge40_demorgan_i_fu_627_p2 <= (newsignbit_27_fu_582_p3 and deleted_ones_fu_620_p3);
    brmerge8_fu_317_p2 <= (tmp_97_fu_290_p2 or newsignbit_26_fu_282_p3);
    brmerge_fu_213_p2 <= (tmp_96_fu_183_p2 or newsignbit_fu_175_p3);
    brmerge_i5_fu_848_p2 <= (p_not_i5_fu_842_p2 or newsignbit_28_reg_1146);
    brmerge_i_fu_756_p2 <= (p_not_i_fu_750_p2 or newsignbit_27_reg_1123);
    brmerge_i_i24_fu_312_p2 <= (newsignbit_26_fu_282_p3 xor isneg_11_reg_981);
    brmerge_i_i25_fu_788_p2 <= (underflow_27_fu_783_p2 or overflow_20_fu_766_p2);
    brmerge_i_i26_fu_880_p2 <= (underflow_28_fu_875_p2 or overflow_21_fu_858_p2);
    brmerge_i_i28_not_fu_257_p2 <= (brmerge_i_i_fu_207_p2 xor ap_const_lv1_1);
    brmerge_i_i29_not_fu_347_p2 <= (brmerge_i_i24_fu_312_p2 xor ap_const_lv1_1);
    brmerge_i_i_fu_207_p2 <= (newsignbit_fu_175_p3 xor isneg_fu_161_p3);
    carry_11_fu_704_p2 <= (tmp_208_fu_654_p3 and tmp_142_fu_698_p2);
    carry_fu_596_p2 <= (tmp_201_fu_546_p3 and tmp_135_fu_590_p2);
    deleted_ones_23_fu_728_p3 <= 
        p_41_i2_fu_723_p2 when (carry_11_fu_704_p2(0) = '1') else 
        Range1_all_ones_30_reg_1105;
    deleted_ones_fu_620_p3 <= 
        p_41_i_fu_615_p2 when (carry_fu_596_p2(0) = '1') else 
        Range1_all_ones_reg_1068;
    deleted_zeros_11_fu_833_p3 <= 
        Range1_all_ones_30_reg_1105 when (carry_11_reg_1151(0) = '1') else 
        Range1_all_zeros_4_reg_1112;
    deleted_zeros_fu_741_p3 <= 
        Range1_all_ones_reg_1068 when (carry_reg_1128(0) = '1') else 
        Range1_all_zeros_reg_1075;
    grp_calc_sin_cos_fu_106_ap_start <= ap_reg_grp_calc_sin_cos_fu_106_ap_start;
    grp_calc_sin_cos_fu_106_flag <= ap_const_logic_1;

    grp_calc_sin_cos_fu_106_theta_aux_V_assign_proc : process(theta_V, ap_CS_fsm_state3, ap_CS_fsm_state4, this_assign_1_reg_976)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_calc_sin_cos_fu_106_theta_aux_V <= theta_V;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_calc_sin_cos_fu_106_theta_aux_V <= this_assign_1_reg_976;
        else 
            grp_calc_sin_cos_fu_106_theta_aux_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_calc_sin_cos_fu_115_ap_start <= ap_reg_grp_calc_sin_cos_fu_115_ap_start;

    grp_calc_sin_cos_fu_115_flag_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_calc_sin_cos_fu_115_flag <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_calc_sin_cos_fu_115_flag <= ap_const_logic_0;
        else 
            grp_calc_sin_cos_fu_115_flag <= 'X';
        end if; 
    end process;


    grp_calc_sin_cos_fu_115_theta_aux_V_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, this_assign_15_1_reg_988, this_assign_14_1_reg_993)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_calc_sin_cos_fu_115_theta_aux_V <= this_assign_14_1_reg_993;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_calc_sin_cos_fu_115_theta_aux_V <= this_assign_15_1_reg_988;
        else 
            grp_calc_sin_cos_fu_115_theta_aux_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_calc_sin_cos_fu_125_ap_start <= ap_reg_grp_calc_sin_cos_fu_125_ap_start;
    grp_calc_sin_cos_fu_125_flag <= ap_const_logic_0;
    grp_calc_sin_cos_fu_134_ap_start <= ap_reg_grp_calc_sin_cos_fu_134_ap_start;
    grp_calc_sin_cos_fu_134_flag <= ap_const_logic_0;
    grp_fu_410_p0 <= ap_const_lv52_555(12 - 1 downto 0);
    grp_fu_419_p0 <= ap_const_lv52_FFFFFFFFFFAAB(12 - 1 downto 0);
    grp_fu_937_p0 <= OP2_V_fu_383_p1(25 - 1 downto 0);
    grp_fu_945_p0 <= OP2_V_4_fu_394_p1(25 - 1 downto 0);
    grp_fu_953_p0 <= OP2_V_fu_383_p1(25 - 1 downto 0);
    grp_fu_961_p0 <= OP2_V_4_fu_394_p1(25 - 1 downto 0);
    isneg_fu_161_p3 <= p_Val2_122_fu_155_p2(16 downto 16);
    newsignbit_26_fu_282_p3 <= p_Val2_2_fu_277_p2(15 downto 15);
    newsignbit_27_fu_582_p3 <= p_Val2_128_fu_576_p2(24 downto 24);
    newsignbit_28_fu_690_p3 <= p_Val2_133_fu_684_p2(24 downto 24);
    newsignbit_fu_175_p3 <= p_Val2_123_fu_169_p2(15 downto 15);
    overflow_19_fu_295_p2 <= (tmp_97_fu_290_p2 and newsignbit_26_fu_282_p3);
    overflow_20_fu_766_p2 <= (tmp_137_fu_761_p2 and brmerge_i_fu_756_p2);
    overflow_21_fu_858_p2 <= (tmp_144_fu_853_p2 and brmerge_i5_fu_848_p2);
    overflow_fu_189_p2 <= (tmp_96_fu_183_p2 and newsignbit_fu_175_p3);
    p_38_i2_fu_838_p2 <= (carry_11_reg_1151 and Range1_all_ones_30_reg_1105);
    p_38_i_fu_746_p2 <= (carry_reg_1128 and Range1_all_ones_reg_1068);
    p_41_i2_fu_723_p2 <= (tmp_143_fu_717_p2 and Range2_all_ones_9_reg_1100);
    p_41_i_fu_615_p2 <= (tmp_136_fu_609_p2 and Range2_all_ones_reg_1063);
    p_Val2_122_fu_155_p2 <= std_logic_vector(signed(ap_const_lv17_1FBD0) + signed(tmp_s_fu_151_p1));
    p_Val2_123_fu_169_p2 <= std_logic_vector(signed(ap_const_lv16_FBD0) + signed(theta_V));
    p_Val2_124_fu_925_p0 <= OP2_V_3_fu_371_p1(25 - 1 downto 0);
    p_Val2_127_fu_525_p4 <= p_Val2_126_reg_1043(48 downto 24);
    p_Val2_128_fu_576_p2 <= std_logic_vector(unsigned(p_Val2_127_fu_525_p4) + unsigned(tmp_134_fu_572_p1));
    p_Val2_132_fu_633_p4 <= p_Val2_131_reg_1080(48 downto 24);
    p_Val2_133_fu_684_p2 <= std_logic_vector(unsigned(p_Val2_132_fu_633_p4) + unsigned(tmp_141_fu_680_p1));
    p_Val2_1_fu_243_p2 <= std_logic_vector(unsigned(ap_const_lv17_430) + unsigned(tmp_s_fu_151_p1));
    p_Val2_27_mux_fu_219_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i_fu_207_p2(0) = '1') else 
        p_Val2_123_fu_169_p2;
    p_Val2_2_fu_277_p2 <= std_logic_vector(unsigned(ap_const_lv16_430) + unsigned(theta_V));
    p_Val2_31_mux_fu_323_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i24_fu_312_p2(0) = '1') else 
        p_Val2_2_fu_277_p2;
    p_Val2_35_mux_fu_805_p3 <= 
        ap_const_lv25_FFFFFF when (brmerge_i_i25_fu_788_p2(0) = '1') else 
        p_Val2_128_reg_1117;
    p_Val2_4_fu_931_p0 <= OP2_V_3_fu_371_p1(25 - 1 downto 0);
    p_Val2_5_fu_331_p3 <= 
        ap_const_lv16_8000 when (underflow_26_fu_307_p2(0) = '1') else 
        p_Val2_2_fu_277_p2;
    p_Val2_6_fu_812_p3 <= 
        ap_const_lv25_1000000 when (underflow_27_fu_783_p2(0) = '1') else 
        p_Val2_128_reg_1117;
    p_Val2_707_mux_fu_897_p3 <= 
        ap_const_lv25_FFFFFF when (brmerge_i_i26_fu_880_p2(0) = '1') else 
        p_Val2_133_reg_1140;
    p_Val2_7_fu_904_p3 <= 
        ap_const_lv25_1000000 when (underflow_28_fu_875_p2(0) = '1') else 
        p_Val2_133_reg_1140;
    p_Val2_s_48_fu_227_p3 <= 
        ap_const_lv16_8000 when (underflow_fu_201_p2(0) = '1') else 
        p_Val2_123_fu_169_p2;
    p_not_i5_fu_842_p2 <= (deleted_zeros_11_fu_833_p3 xor ap_const_lv1_1);
    p_not_i_fu_750_p2 <= (deleted_zeros_fu_741_p3 xor ap_const_lv1_1);
    qb_assign_6_fu_674_p2 <= (r_i_i1_fu_668_p2 and qbit_15_fu_642_p3);
    qb_assign_s_fu_566_p2 <= (r_i_i_fu_560_p2 and qbit_fu_534_p3);
    qbit_15_fu_642_p3 <= p_Val2_131_reg_1080(23 downto 23);
    qbit_fu_534_p3 <= p_Val2_126_reg_1043(23 downto 23);
    r_14_fu_649_p2 <= "0" when (tmp_207_reg_1095 = ap_const_lv23_0) else "1";
    r_fu_541_p2 <= "0" when (tmp_200_reg_1058 = ap_const_lv23_0) else "1";
    r_i_i1_fu_668_p2 <= (tmp_209_fu_661_p3 or r_14_fu_649_p2);
    r_i_i_fu_560_p2 <= (tmp_202_fu_553_p3 or r_fu_541_p2);
    this_assign_14_1_fu_339_p3 <= 
        p_Val2_31_mux_fu_323_p3 when (brmerge8_fu_317_p2(0) = '1') else 
        p_Val2_5_fu_331_p3;
    this_assign_15_1_fu_269_p3 <= 
        p_Val2_27_mux_fu_219_p3 when (brmerge1_fu_263_p2(0) = '1') else 
        p_Val2_s_48_fu_227_p3;
    this_assign_16_1_fu_359_p3 <= 
        p_Val2_31_mux_fu_323_p3 when (brmerge2_fu_353_p2(0) = '1') else 
        p_Val2_5_fu_331_p3;
    this_assign_1_fu_235_p3 <= 
        p_Val2_27_mux_fu_219_p3 when (brmerge_fu_213_p2(0) = '1') else 
        p_Val2_s_48_fu_227_p3;
    tmp1_fu_794_p2 <= (tmp_137_fu_761_p2 or brmerge40_demorgan_i_reg_1134);
    tmp2_demorgan_fu_864_p2 <= (p_38_i2_fu_838_p2 or brmerge40_demorgan_i_3_reg_1157);
    tmp2_fu_869_p2 <= (tmp2_demorgan_fu_864_p2 xor ap_const_lv1_1);
    tmp3_fu_886_p2 <= (tmp_144_fu_853_p2 or brmerge40_demorgan_i_3_reg_1157);
    tmp_100_fu_453_p4 <= grp_fu_410_p2(51 downto 49);
    tmp_102_fu_487_p4 <= grp_fu_419_p2(51 downto 50);
    tmp_103_fu_503_p4 <= grp_fu_419_p2(51 downto 49);
    tmp_130_fu_195_p2 <= (newsignbit_fu_175_p3 xor ap_const_lv1_1);
    tmp_133_fu_301_p2 <= (newsignbit_26_fu_282_p3 xor ap_const_lv1_1);
    tmp_134_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_s_fu_566_p2),25));
    tmp_135_fu_590_p2 <= (newsignbit_27_fu_582_p3 xor ap_const_lv1_1);
    tmp_136_fu_609_p2 <= (tmp_204_fu_602_p3 xor ap_const_lv1_1);
    tmp_137_fu_761_p2 <= (signbit_reg_1052 xor ap_const_lv1_1);
    tmp_141_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_6_fu_674_p2),25));
    tmp_142_fu_698_p2 <= (newsignbit_28_fu_690_p3 xor ap_const_lv1_1);
    tmp_143_fu_717_p2 <= (tmp_211_fu_710_p3 xor ap_const_lv1_1);
    tmp_144_fu_853_p2 <= (signbit_13_reg_1089 xor ap_const_lv1_1);
    tmp_200_fu_433_p1 <= grp_fu_410_p2(23 - 1 downto 0);
    tmp_201_fu_546_p3 <= p_Val2_126_reg_1043(48 downto 48);
    tmp_202_fu_553_p3 <= p_Val2_126_reg_1043(24 downto 24);
    tmp_204_fu_602_p3 <= p_Val2_126_reg_1043(49 downto 49);
    tmp_207_fu_483_p1 <= grp_fu_419_p2(23 - 1 downto 0);
    tmp_208_fu_654_p3 <= p_Val2_131_reg_1080(48 downto 48);
    tmp_209_fu_661_p3 <= p_Val2_131_reg_1080(24 downto 24);
    tmp_211_fu_710_p3 <= p_Val2_131_reg_1080(49 downto 49);
    tmp_96_fu_183_p2 <= (isneg_fu_161_p3 xor ap_const_lv1_1);
    tmp_97_fu_290_p2 <= (isneg_11_reg_981 xor ap_const_lv1_1);
    tmp_99_fu_437_p4 <= grp_fu_410_p2(51 downto 50);
    tmp_demorgan_fu_772_p2 <= (p_38_i_fu_746_p2 or brmerge40_demorgan_i_reg_1134);
    tmp_fu_777_p2 <= (tmp_demorgan_fu_772_p2 xor ap_const_lv1_1);
        tmp_s_fu_151_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(theta_V),17));

    underflow_25_not_fu_799_p2 <= (tmp1_fu_794_p2 or p_38_i_fu_746_p2);
    underflow_26_fu_307_p2 <= (tmp_133_fu_301_p2 and isneg_11_reg_981);
    underflow_26_not_fu_891_p2 <= (tmp3_fu_886_p2 or p_38_i2_fu_838_p2);
    underflow_27_fu_783_p2 <= (tmp_fu_777_p2 and signbit_reg_1052);
    underflow_28_fu_875_p2 <= (tmp2_fu_869_p2 and signbit_13_reg_1089);
    underflow_fu_201_p2 <= (tmp_130_fu_195_p2 and isneg_fu_161_p3);
end behav;
