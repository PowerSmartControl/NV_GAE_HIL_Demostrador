-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calc_sin_cos is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    theta_aux_V : IN STD_LOGIC_VECTOR (15 downto 0);
    flag : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of calc_sin_cos is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv17_324 : STD_LOGIC_VECTOR (16 downto 0) := "00000001100100100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_C91 : STD_LOGIC_VECTOR (15 downto 0) := "0000110010010001";
    constant ap_const_lv17_1F36F : STD_LOGIC_VECTOR (16 downto 0) := "11111001101101111";
    constant ap_const_lv16_F36F : STD_LOGIC_VECTOR (15 downto 0) := "1111001101101111";
    constant ap_const_lv17_C91 : STD_LOGIC_VECTOR (16 downto 0) := "00000110010010001";
    constant ap_const_lv16_324 : STD_LOGIC_VECTOR (15 downto 0) := "0000001100100100";
    constant ap_const_lv16_323 : STD_LOGIC_VECTOR (15 downto 0) := "0000001100100011";
    constant ap_const_lv16_648 : STD_LOGIC_VECTOR (15 downto 0) := "0000011001001000";
    constant ap_const_lv16_647 : STD_LOGIC_VECTOR (15 downto 0) := "0000011001000111";
    constant ap_const_lv16_96D : STD_LOGIC_VECTOR (15 downto 0) := "0000100101101101";
    constant ap_const_lv16_96C : STD_LOGIC_VECTOR (15 downto 0) := "0000100101101100";
    constant ap_const_lv17_648 : STD_LOGIC_VECTOR (16 downto 0) := "00000011001001000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv17_1F9B8 : STD_LOGIC_VECTOR (16 downto 0) := "11111100110111000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv37_517CC : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000001010001011111001100";
    constant ap_const_lv36_517CC : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000001010001011111001100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sin_func_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_func_ce0 : STD_LOGIC;
    signal sin_func_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sin_func_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_func_ce1 : STD_LOGIC;
    signal sin_func_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sin_func_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_func_ce2 : STD_LOGIC;
    signal sin_func_q2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_91_fu_220_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_reg_1172 : STD_LOGIC_VECTOR (15 downto 0);
    signal isneg_8_fu_354_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_8_reg_1180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Val2_96_fu_362_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_96_reg_1185 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_23_fu_368_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_23_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_408_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp2_reg_1195 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp3_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_1200 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_100_fu_543_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_100_reg_1205 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_174_reg_1210 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_10_reg_1216 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_102_fu_577_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_102_reg_1223 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_25_reg_1229 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_105_fu_640_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_105_reg_1236 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_177_fu_648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_177_reg_1242 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_reg_1247 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1252 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_1257 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_demorgan_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_demorgan_reg_1267 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_1272 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_1277 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_94_reg_1282 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_95_reg_1287 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_92_reg_1292 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_Val2_109_fu_876_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_109_reg_1317 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_111_reg_1322 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp14_fu_966_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp14_reg_1327 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_119_fu_824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_124_fu_828_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_127_fu_832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_113_fu_836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_130_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_s_fu_134_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal newsignbit_fu_152_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_fu_140_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_not_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_90_fu_148_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal underflow_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_206_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_672_mux_fu_190_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_47_fu_198_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_fu_220_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_212_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_101_fu_233_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_92_fu_236_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_93_fu_250_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_22_fu_255_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_7_fu_242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_13_not_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i20_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_22_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_301_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal brmerge5_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_675_mux_fu_293_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp5_fu_309_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_94_fu_328_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_103_fu_344_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_95_fu_348_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_104_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_14_not_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_23_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_336_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_400_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal brmerge6_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i21_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_678_mux_fu_426_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_97_fu_433_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_106_fu_445_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_98_fu_449_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_99_fu_463_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_24_fu_469_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_9_fu_455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_15_not_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i22_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_24_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_515_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal brmerge7_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_681_mux_fu_507_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp4_fu_523_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_108_fu_559_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_101_fu_563_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_109_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_16_not_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i23_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_25_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_622_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal brmerge8_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_684_mux_fu_615_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp10_fu_629_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal rev_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_demorgan_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_123_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp44_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_752_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_fu_755_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_14_fu_1144_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_9_fu_774_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_15_fu_1151_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_11_fu_793_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_16_fu_1158_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_13_fu_1165_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_181_fu_840_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_182_fu_854_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_183_fu_858_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_108_fu_850_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_121_fu_872_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_118_fu_882_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_190_fu_896_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_192_fu_914_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qbit_14_fu_910_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_5_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_119_fu_906_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_128_fu_928_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_120_fu_932_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_189_fu_888_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_fu_938_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_18_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_121_fu_958_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_178_fu_973_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_179_fu_987_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_180_fu_991_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_fu_983_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_115_fu_1005_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_112_fu_1015_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_185_fu_1028_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_187_fu_1046_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qbit_fu_1042_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_s_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_113_fu_1038_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_125_fu_1060_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_114_fu_1064_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_184_fu_1020_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_188_fu_1070_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_115_fu_1090_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_123_not_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp19_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_1108_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_9_fu_1009_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp20_fu_1130_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_14_fu_1144_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_14_fu_1144_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_15_fu_1151_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_15_fu_1151_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_16_fu_1158_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_16_fu_1158_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_13_fu_1165_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_13_fu_1165_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_result_V_2_fu_1137_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_13_fu_1165_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_14_fu_1144_p10 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_15_fu_1151_p10 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_16_fu_1158_p10 : STD_LOGIC_VECTOR (36 downto 0);

    component pmsm_mul_mul_20nscud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component pmsm_mul_mul_20nsdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component calc_sin_cos_sin_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    sin_func_U : component calc_sin_cos_sin_bkb
    generic map (
        DataWidth => 15,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sin_func_address0,
        ce0 => sin_func_ce0,
        q0 => sin_func_q0,
        address1 => sin_func_address1,
        ce1 => sin_func_ce1,
        q1 => sin_func_q1,
        address2 => sin_func_address2,
        ce2 => sin_func_ce2,
        q2 => sin_func_q2);

    pmsm_mul_mul_20nscud_U1 : component pmsm_mul_mul_20nscud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 17,
        dout_WIDTH => 37)
    port map (
        din0 => r_V_14_fu_1144_p0,
        din1 => r_V_14_fu_1144_p1,
        dout => r_V_14_fu_1144_p2);

    pmsm_mul_mul_20nscud_U2 : component pmsm_mul_mul_20nscud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 17,
        dout_WIDTH => 37)
    port map (
        din0 => r_V_15_fu_1151_p0,
        din1 => r_V_15_fu_1151_p1,
        dout => r_V_15_fu_1151_p2);

    pmsm_mul_mul_20nscud_U3 : component pmsm_mul_mul_20nscud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 17,
        dout_WIDTH => 37)
    port map (
        din0 => r_V_16_fu_1158_p0,
        din1 => r_V_16_fu_1158_p1,
        dout => r_V_16_fu_1158_p2);

    pmsm_mul_mul_20nsdEe_U4 : component pmsm_mul_mul_20nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 16,
        dout_WIDTH => 36)
    port map (
        din0 => r_V_13_fu_1165_p0,
        din1 => r_V_13_fu_1165_p1,
        dout => r_V_13_fu_1165_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_preg <= agg_result_V_2_fu_1137_p3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                ap_return <= agg_result_V_2_fu_1137_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                isneg_10_reg_1216 <= p_Val2_101_fu_563_p2(16 downto 16);
                newsignbit_25_reg_1229 <= p_Val2_102_fu_577_p2(15 downto 15);
                p_Val2_100_reg_1205 <= p_Val2_100_fu_543_p3;
                p_Val2_102_reg_1223 <= p_Val2_102_fu_577_p2;
                tmp_174_reg_1210 <= p_Val2_100_fu_543_p3(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                isneg_8_reg_1180 <= p_Val2_95_fu_348_p2(16 downto 16);
                newsignbit_23_reg_1190 <= p_Val2_96_fu_362_p2(15 downto 15);
                p_Val2_96_reg_1185 <= p_Val2_96_fu_362_p2;
                sel_tmp2_reg_1195 <= sel_tmp2_fu_408_p3;
                sel_tmp3_reg_1200 <= sel_tmp3_fu_416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                or_cond2_reg_1257 <= or_cond2_fu_686_p2;
                or_cond3_reg_1262 <= or_cond3_fu_704_p2;
                or_cond_reg_1252 <= or_cond_fu_668_p2;
                p_Val2_105_reg_1236 <= p_Val2_105_fu_640_p3;
                sel_tmp13_reg_1272 <= sel_tmp13_fu_746_p2;
                sel_tmp30_demorgan_reg_1267 <= sel_tmp30_demorgan_fu_722_p2;
                tmp_110_reg_1247 <= tmp_110_fu_662_p2;
                tmp_177_reg_1242 <= p_Val2_105_fu_640_p3(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1252 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                p_Val2_109_reg_1317 <= p_Val2_109_fu_876_p2;
                p_Val2_111_reg_1322 <= sin_func_q1;
                sel_tmp14_reg_1327 <= sel_tmp14_fu_966_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Val2_91_reg_1172 <= p_Val2_91_fu_220_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1252 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_92_reg_1292 <= r_V_13_fu_1165_p2(35 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1252 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_93_reg_1277 <= r_V_14_fu_1144_p2(36 downto 18);
                tmp_94_reg_1282 <= r_V_15_fu_1151_p2(36 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1252 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (sel_tmp13_reg_1272 = ap_const_lv1_1))) then
                tmp_95_reg_1287 <= r_V_16_fu_1158_p2(36 downto 18);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    agg_result_V_2_fu_1137_p3 <= 
        p_Val2_9_fu_1009_p2 when (or_cond_reg_1252(0) = '1') else 
        sel_tmp20_fu_1130_p3;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge5_fu_287_p2 <= (newsignbit_22_fu_255_p3 or isneg_13_not_fu_281_p2);
    brmerge6_fu_394_p2 <= (newsignbit_23_fu_368_p3 or isneg_14_not_fu_388_p2);
    brmerge7_fu_501_p2 <= (newsignbit_24_fu_469_p3 or isneg_15_not_fu_495_p2);
    brmerge8_fu_610_p2 <= (newsignbit_25_reg_1229 or isneg_16_not_fu_605_p2);
    brmerge_fu_184_p2 <= (newsignbit_fu_152_p3 or isneg_not_fu_178_p2);
    brmerge_i_i20_fu_275_p2 <= (newsignbit_22_fu_255_p3 xor isneg_7_fu_242_p3);
    brmerge_i_i21_fu_422_p2 <= (newsignbit_23_reg_1190 xor isneg_8_reg_1180);
    brmerge_i_i22_fu_489_p2 <= (newsignbit_24_fu_469_p3 xor isneg_9_fu_455_p3);
    brmerge_i_i23_fu_601_p2 <= (newsignbit_25_reg_1229 xor isneg_10_reg_1216);
    brmerge_i_i_fu_172_p2 <= (newsignbit_fu_152_p3 xor isneg_fu_140_p3);
    isneg_13_not_fu_281_p2 <= (isneg_7_fu_242_p3 xor ap_const_lv1_1);
    isneg_14_not_fu_388_p2 <= (isneg_8_fu_354_p3 xor ap_const_lv1_1);
    isneg_15_not_fu_495_p2 <= (isneg_9_fu_455_p3 xor ap_const_lv1_1);
    isneg_16_not_fu_605_p2 <= (isneg_10_reg_1216 xor ap_const_lv1_1);
    isneg_7_fu_242_p3 <= p_Val2_92_fu_236_p2(16 downto 16);
    isneg_8_fu_354_p3 <= p_Val2_95_fu_348_p2(16 downto 16);
    isneg_9_fu_455_p3 <= p_Val2_98_fu_449_p2(16 downto 16);
    isneg_fu_140_p3 <= p_Val2_s_fu_134_p2(16 downto 16);
    isneg_not_fu_178_p2 <= (isneg_fu_140_p3 xor ap_const_lv1_1);
    newsignbit_22_fu_255_p3 <= p_Val2_93_fu_250_p2(15 downto 15);
    newsignbit_23_fu_368_p3 <= p_Val2_96_fu_362_p2(15 downto 15);
    newsignbit_24_fu_469_p3 <= p_Val2_99_fu_463_p2(15 downto 15);
    newsignbit_fu_152_p3 <= p_Val2_s_fu_134_p2(15 downto 15);
    or_cond2_fu_686_p2 <= (tmp_112_fu_680_p2 and tmp_111_fu_674_p2);
    or_cond3_fu_704_p2 <= (tmp_118_fu_698_p2 and tmp_117_fu_692_p2);
    or_cond_fu_668_p2 <= (tmp_110_fu_662_p2 and rev_fu_656_p2);
    overflow_18_fu_952_p2 <= (tmp_193_fu_938_p3 and tmp_129_fu_946_p2);
    overflow_fu_1084_p2 <= (tmp_188_fu_1070_p3 and tmp_126_fu_1078_p2);
    p_Val2_100_fu_543_p3 <= 
        p_Val2_681_mux_fu_507_p3 when (sel_tmp9_fu_537_p2(0) = '1') else 
        sel_tmp4_fu_523_p3;
    p_Val2_101_fu_563_p2 <= std_logic_vector(unsigned(ap_const_lv17_C91) + unsigned(tmp_108_fu_559_p1));
    p_Val2_102_fu_577_p2 <= std_logic_vector(unsigned(ap_const_lv16_C91) + unsigned(p_Val2_100_fu_543_p3));
    p_Val2_105_fu_640_p3 <= 
        p_Val2_684_mux_fu_615_p3 when (sel_tmp11_fu_635_p2(0) = '1') else 
        sel_tmp10_fu_629_p3;
    p_Val2_108_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_181_fu_840_p4),16));
    p_Val2_109_fu_876_p2 <= std_logic_vector(unsigned(p_Val2_108_fu_850_p1) + unsigned(tmp_121_fu_872_p1));
    p_Val2_112_fu_1015_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(p_Val2_111_reg_1322));
        p_Val2_113_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_185_fu_1028_p4),16));

    p_Val2_114_fu_1064_p2 <= std_logic_vector(signed(p_Val2_113_fu_1038_p1) + signed(tmp_125_fu_1060_p1));
    p_Val2_115_fu_1090_p3 <= 
        ap_const_lv16_7FFF when (overflow_fu_1084_p2(0) = '1') else 
        p_Val2_114_fu_1064_p2;
    p_Val2_118_fu_882_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(sin_func_q2));
        p_Val2_119_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_190_fu_896_p4),16));

    p_Val2_120_fu_932_p2 <= std_logic_vector(signed(p_Val2_119_fu_906_p1) + signed(tmp_128_fu_928_p1));
    p_Val2_121_fu_958_p3 <= 
        ap_const_lv16_7FFF when (overflow_18_fu_952_p2(0) = '1') else 
        p_Val2_120_fu_932_p2;
    p_Val2_1_fu_301_p3 <= 
        ap_const_lv16_8000 when (underflow_22_fu_269_p2(0) = '1') else 
        p_Val2_93_fu_250_p2;
    p_Val2_2_fu_400_p3 <= 
        ap_const_lv16_8000 when (underflow_23_fu_382_p2(0) = '1') else 
        p_Val2_96_fu_362_p2;
    p_Val2_3_fu_515_p3 <= 
        ap_const_lv16_8000 when (underflow_24_fu_483_p2(0) = '1') else 
        p_Val2_99_fu_463_p2;
    p_Val2_4_fu_622_p3 <= 
        ap_const_lv16_8000 when (underflow_25_fu_596_p2(0) = '1') else 
        p_Val2_102_reg_1223;
    p_Val2_672_mux_fu_190_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i_fu_172_p2(0) = '1') else 
        p_Val2_90_fu_148_p1;
    p_Val2_675_mux_fu_293_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i20_fu_275_p2(0) = '1') else 
        p_Val2_93_fu_250_p2;
    p_Val2_678_mux_fu_426_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i21_fu_422_p2(0) = '1') else 
        p_Val2_96_reg_1185;
    p_Val2_681_mux_fu_507_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i22_fu_489_p2(0) = '1') else 
        p_Val2_99_fu_463_p2;
    p_Val2_684_mux_fu_615_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i23_fu_601_p2(0) = '1') else 
        p_Val2_102_reg_1223;
    p_Val2_8_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_178_fu_973_p4),16));
    p_Val2_90_fu_148_p1 <= p_Val2_s_fu_134_p2(16 - 1 downto 0);
    p_Val2_91_fu_220_p0 <= (0=>flag, others=>'-');
    p_Val2_91_fu_220_p3 <= 
        sel_tmp1_fu_212_p3 when (p_Val2_91_fu_220_p0(0) = '1') else 
        theta_aux_V;
    p_Val2_92_fu_236_p2 <= std_logic_vector(signed(ap_const_lv17_1F36F) + signed(tmp_101_fu_233_p1));
    p_Val2_93_fu_250_p2 <= std_logic_vector(signed(ap_const_lv16_F36F) + signed(p_Val2_91_reg_1172));
    p_Val2_94_fu_328_p3 <= 
        p_Val2_675_mux_fu_293_p3 when (sel_tmp7_fu_322_p2(0) = '1') else 
        sel_tmp5_fu_309_p3;
    p_Val2_95_fu_348_p2 <= std_logic_vector(unsigned(ap_const_lv17_C91) + unsigned(tmp_103_fu_344_p1));
    p_Val2_96_fu_362_p2 <= std_logic_vector(unsigned(ap_const_lv16_C91) + unsigned(p_Val2_94_fu_328_p3));
    p_Val2_97_fu_433_p3 <= 
        p_Val2_678_mux_fu_426_p3 when (sel_tmp3_reg_1200(0) = '1') else 
        sel_tmp2_reg_1195;
    p_Val2_98_fu_449_p2 <= std_logic_vector(signed(ap_const_lv17_1F36F) + signed(tmp_106_fu_445_p1));
    p_Val2_99_fu_463_p2 <= std_logic_vector(signed(ap_const_lv16_F36F) + signed(p_Val2_97_fu_433_p3));
    p_Val2_9_fu_1009_p2 <= std_logic_vector(unsigned(p_Val2_8_fu_983_p1) + unsigned(tmp_115_fu_1005_p1));
    p_Val2_s_47_fu_198_p3 <= 
        ap_const_lv16_8000 when (underflow_fu_166_p2(0) = '1') else 
        p_Val2_90_fu_148_p1;
    p_Val2_s_fu_134_p2 <= std_logic_vector(unsigned(ap_const_lv17_324) - unsigned(tmp_s_fu_130_p1));
    qb_assign_5_fu_922_p2 <= (tmp_192_fu_914_p3 and qbit_14_fu_910_p1);
    qb_assign_s_fu_1054_p2 <= (tmp_187_fu_1046_p3 and qbit_fu_1042_p1);
    qbit_14_fu_910_p1 <= p_Val2_118_fu_882_p2(1 - 1 downto 0);
    qbit_fu_1042_p1 <= p_Val2_112_fu_1015_p2(1 - 1 downto 0);
    r_V_11_fu_793_p2 <= std_logic_vector(unsigned(ap_const_lv17_C91) - unsigned(tmp_116_fu_752_p1));
    r_V_13_fu_1165_p0 <= ap_const_lv36_517CC(20 - 1 downto 0);
    r_V_13_fu_1165_p1 <= r_V_13_fu_1165_p10(16 - 1 downto 0);
    r_V_13_fu_1165_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_105_reg_1236),36));
    r_V_14_fu_1144_p0 <= ap_const_lv37_517CC(20 - 1 downto 0);
    r_V_14_fu_1144_p1 <= r_V_14_fu_1144_p10(17 - 1 downto 0);
    r_V_14_fu_1144_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_755_p2),37));
    r_V_15_fu_1151_p0 <= ap_const_lv37_517CC(20 - 1 downto 0);
    r_V_15_fu_1151_p1 <= r_V_15_fu_1151_p10(17 - 1 downto 0);
    r_V_15_fu_1151_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_9_fu_774_p2),37));
    r_V_16_fu_1158_p0 <= ap_const_lv37_517CC(20 - 1 downto 0);
    r_V_16_fu_1158_p1 <= r_V_16_fu_1158_p10(17 - 1 downto 0);
    r_V_16_fu_1158_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_11_fu_793_p2),37));
    r_V_9_fu_774_p2 <= std_logic_vector(signed(ap_const_lv17_1F9B8) + signed(tmp_116_fu_752_p1));
    r_V_fu_755_p2 <= std_logic_vector(unsigned(ap_const_lv17_648) - unsigned(tmp_116_fu_752_p1));
    rev_fu_656_p2 <= (tmp_177_fu_648_p3 xor ap_const_lv1_1);
    sel_tmp10_fu_629_p3 <= 
        p_Val2_4_fu_622_p3 when (tmp_174_reg_1210(0) = '1') else 
        p_Val2_100_reg_1205;
    sel_tmp11_fu_635_p2 <= (tmp_174_reg_1210 and brmerge8_fu_610_p2);
    sel_tmp12_fu_734_p2 <= (sel_tmp32_demorgan_fu_728_p2 xor ap_const_lv1_1);
    sel_tmp13_fu_746_p2 <= (tmp_122_fu_710_p2 and tmp44_fu_740_p2);
    sel_tmp14_fu_966_p3 <= 
        p_Val2_121_fu_958_p3 when (sel_tmp13_reg_1272(0) = '1') else 
        ap_const_lv16_7FFF;
    sel_tmp15_fu_1098_p2 <= (sel_tmp30_demorgan_reg_1267 xor ap_const_lv1_1);
    sel_tmp16_fu_1103_p2 <= (sel_tmp15_fu_1098_p2 and or_cond3_reg_1262);
    sel_tmp17_fu_1108_p3 <= 
        p_Val2_115_fu_1090_p3 when (sel_tmp16_fu_1103_p2(0) = '1') else 
        sel_tmp14_reg_1327;
    sel_tmp18_fu_1120_p2 <= (tmp_177_reg_1242 or tmp_123_not_fu_1115_p2);
    sel_tmp19_fu_1125_p2 <= (sel_tmp18_fu_1120_p2 and or_cond2_reg_1257);
    sel_tmp1_fu_212_p3 <= 
        p_Val2_672_mux_fu_190_p3 when (sel_tmp_fu_206_p2(0) = '1') else 
        p_Val2_s_47_fu_198_p3;
    sel_tmp20_fu_1130_p3 <= 
        p_Val2_109_reg_1317 when (sel_tmp19_fu_1125_p2(0) = '1') else 
        sel_tmp17_fu_1108_p3;
    sel_tmp2_fu_408_p3 <= 
        p_Val2_2_fu_400_p3 when (tmp_fu_336_p3(0) = '1') else 
        p_Val2_94_fu_328_p3;
    sel_tmp30_demorgan_fu_722_p2 <= (or_cond_fu_668_p2 or or_cond2_fu_686_p2);
    sel_tmp32_demorgan_fu_728_p2 <= (sel_tmp30_demorgan_fu_722_p2 or or_cond3_fu_704_p2);
    sel_tmp3_fu_416_p2 <= (tmp_fu_336_p3 and brmerge6_fu_394_p2);
    sel_tmp4_fu_523_p3 <= 
        p_Val2_97_fu_433_p3 when (tmp_105_fu_439_p2(0) = '1') else 
        p_Val2_3_fu_515_p3;
    sel_tmp5_fu_309_p3 <= 
        p_Val2_91_reg_1172 when (tmp_100_fu_228_p2(0) = '1') else 
        p_Val2_1_fu_301_p3;
    sel_tmp6_fu_316_p2 <= (tmp_100_fu_228_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_322_p2 <= (sel_tmp6_fu_316_p2 and brmerge5_fu_287_p2);
    sel_tmp8_fu_531_p2 <= (tmp_105_fu_439_p2 xor ap_const_lv1_1);
    sel_tmp9_fu_537_p2 <= (sel_tmp8_fu_531_p2 and brmerge7_fu_501_p2);
    sel_tmp_fu_206_p1 <= (0=>flag, others=>'-');
    sel_tmp_fu_206_p2 <= (sel_tmp_fu_206_p1 and brmerge_fu_184_p2);

    sin_func_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, tmp_119_fu_824_p1, tmp_113_fu_836_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sin_func_address0 <= tmp_113_fu_836_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sin_func_address0 <= tmp_119_fu_824_p1(10 - 1 downto 0);
        else 
            sin_func_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    sin_func_address1 <= tmp_124_fu_828_p1(10 - 1 downto 0);
    sin_func_address2 <= tmp_127_fu_832_p1(10 - 1 downto 0);

    sin_func_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            sin_func_ce0 <= ap_const_logic_1;
        else 
            sin_func_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sin_func_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sin_func_ce1 <= ap_const_logic_1;
        else 
            sin_func_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sin_func_ce2_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sin_func_ce2 <= ap_const_logic_1;
        else 
            sin_func_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    tmp44_fu_740_p2 <= (tmp_123_fu_716_p2 and sel_tmp12_fu_734_p2);
    tmp_100_fu_228_p2 <= "1" when (signed(p_Val2_91_reg_1172) < signed(ap_const_lv16_C91)) else "0";
    tmp_101_fu_233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_91_reg_1172),17));
    tmp_102_fu_263_p2 <= (newsignbit_22_fu_255_p3 xor ap_const_lv1_1);
        tmp_103_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_94_fu_328_p3),17));

    tmp_104_fu_376_p2 <= (newsignbit_23_fu_368_p3 xor ap_const_lv1_1);
    tmp_105_fu_439_p2 <= "1" when (signed(p_Val2_97_fu_433_p3) < signed(ap_const_lv16_C91)) else "0";
    tmp_106_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_97_fu_433_p3),17));
    tmp_107_fu_477_p2 <= (newsignbit_24_fu_469_p3 xor ap_const_lv1_1);
        tmp_108_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_100_fu_543_p3),17));

    tmp_109_fu_591_p2 <= (newsignbit_25_reg_1229 xor ap_const_lv1_1);
    tmp_110_fu_662_p2 <= "1" when (signed(p_Val2_105_fu_640_p3) < signed(ap_const_lv16_324)) else "0";
    tmp_111_fu_674_p2 <= "1" when (signed(p_Val2_105_fu_640_p3) > signed(ap_const_lv16_323)) else "0";
    tmp_112_fu_680_p2 <= "1" when (signed(p_Val2_105_fu_640_p3) < signed(ap_const_lv16_648)) else "0";
    tmp_113_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_92_reg_1292),64));
    tmp_114_fu_999_p2 <= (tmp_180_fu_991_p3 and tmp_179_fu_987_p1);
    tmp_115_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_fu_999_p2),16));
    tmp_116_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_105_reg_1236),17));
    tmp_117_fu_692_p2 <= "1" when (signed(p_Val2_105_fu_640_p3) > signed(ap_const_lv16_647)) else "0";
    tmp_118_fu_698_p2 <= "1" when (signed(p_Val2_105_fu_640_p3) < signed(ap_const_lv16_96D)) else "0";
    tmp_119_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_reg_1277),64));
    tmp_120_fu_866_p2 <= (tmp_183_fu_858_p3 and tmp_182_fu_854_p1);
    tmp_121_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_120_fu_866_p2),16));
    tmp_122_fu_710_p2 <= "1" when (signed(p_Val2_105_fu_640_p3) > signed(ap_const_lv16_96C)) else "0";
    tmp_123_fu_716_p2 <= "1" when (signed(p_Val2_105_fu_640_p3) < signed(ap_const_lv16_C91)) else "0";
    tmp_123_not_fu_1115_p2 <= (tmp_110_reg_1247 xor ap_const_lv1_1);
    tmp_124_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_reg_1282),64));
    tmp_125_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_s_fu_1054_p2),16));
    tmp_126_fu_1078_p2 <= (tmp_184_fu_1020_p3 xor ap_const_lv1_1);
    tmp_127_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_reg_1287),64));
    tmp_128_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_5_fu_922_p2),16));
    tmp_129_fu_946_p2 <= (tmp_189_fu_888_p3 xor ap_const_lv1_1);
    tmp_177_fu_648_p3 <= p_Val2_105_fu_640_p3(15 downto 15);
    tmp_178_fu_973_p4 <= sin_func_q0(14 downto 1);
    tmp_179_fu_987_p1 <= sin_func_q0(1 - 1 downto 0);
    tmp_180_fu_991_p3 <= sin_func_q0(1 downto 1);
    tmp_181_fu_840_p4 <= sin_func_q0(14 downto 1);
    tmp_182_fu_854_p1 <= sin_func_q0(1 - 1 downto 0);
    tmp_183_fu_858_p3 <= sin_func_q0(1 downto 1);
    tmp_184_fu_1020_p3 <= p_Val2_112_fu_1015_p2(14 downto 14);
    tmp_185_fu_1028_p4 <= p_Val2_112_fu_1015_p2(14 downto 1);
    tmp_187_fu_1046_p3 <= p_Val2_112_fu_1015_p2(1 downto 1);
    tmp_188_fu_1070_p3 <= p_Val2_114_fu_1064_p2(15 downto 15);
    tmp_189_fu_888_p3 <= p_Val2_118_fu_882_p2(14 downto 14);
    tmp_190_fu_896_p4 <= p_Val2_118_fu_882_p2(14 downto 1);
    tmp_192_fu_914_p3 <= p_Val2_118_fu_882_p2(1 downto 1);
    tmp_193_fu_938_p3 <= p_Val2_120_fu_932_p2(15 downto 15);
    tmp_99_fu_160_p2 <= (newsignbit_fu_152_p3 xor ap_const_lv1_1);
    tmp_fu_336_p3 <= p_Val2_94_fu_328_p3(15 downto 15);
        tmp_s_fu_130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(theta_aux_V),17));

    underflow_22_fu_269_p2 <= (tmp_102_fu_263_p2 and isneg_7_fu_242_p3);
    underflow_23_fu_382_p2 <= (tmp_104_fu_376_p2 and isneg_8_fu_354_p3);
    underflow_24_fu_483_p2 <= (tmp_107_fu_477_p2 and isneg_9_fu_455_p3);
    underflow_25_fu_596_p2 <= (tmp_109_fu_591_p2 and isneg_10_reg_1216);
    underflow_fu_166_p2 <= (tmp_99_fu_160_p2 and isneg_fu_140_p3);
end behav;
